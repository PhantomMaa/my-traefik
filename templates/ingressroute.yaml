apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: ingress-traefik
spec:
  entryPoints:
{{- if eq .Values.config.https.enabled true }}
    - websecure
{{ else }}
    - web
{{- end }}
  routes:
    - match: Host(`traefik.{{ .Values.config.domain }}`) && (PathPrefix(`/`) || PathPrefix(`/dashboard`) || PathPrefix(`/api`))
      kind: Rule
      services:
        - name: api@internal
          kind: TraefikService
{{- if eq .Values.config.auth.enabled true }}
      middlewares:
        - name: user-auth
{{- end }}
{{- if eq .Values.config.https.enabled true }}
  tls:
    secretName: wildcard-tls-certificate
{{- end }}

---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: ingress-traefik-ping
spec:
  entryPoints:
{{- if eq .Values.config.https.enabled true }}
    - websecure
{{ else }}
    - web
{{- end }}
  routes:
    - match: Host(`traefik.{{ .Values.config.domain }}`) && PathPrefix(`/ping`)
      kind: Rule
      priority: 1000
      services:
        - name: ping@internal
          kind: TraefikService
{{- if eq .Values.config.https.enabled true }}
  tls:
    secretName: wildcard-tls-certificate
{{- end }}

{{- if eq .Values.config.https.enabled true }}
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: redirect-to-https
spec:
  entryPoints:
    - web
  routes:
    - match: HostRegexp(`.*`)
      kind: Rule
      services:
        - name: noop@internal
          kind: TraefikService
      middlewares:
        - name: redirect-to-https
{{- end }}